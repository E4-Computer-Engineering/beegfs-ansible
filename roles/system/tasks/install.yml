---
- name: Gather distribution related facts
  ansible.builtin.setup:
    gather_subset:
      - distribution
  tags:
    - system
    - system_install
    - install

- name: Load OS specific variables
  ansible.builtin.include_vars:
    file: "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
  tags:
    - system
    - system_install
    - install

- name: Check if the Rocky vault repo exists
  ansible.builtin.uri:
    url: "http://dl.rockylinux.org/vault/rocky/{{ ansible_distribution_version }}/devel/x86_64/os/"
    method: HEAD
  register: rocky_vault_test
  failed_when: rocky_vault_test.status is undefined or rocky_vault_test.status <= 0
  when:
    - ansible_distribution == 'Rocky'
  tags:
    - system
    - system_install
    - install

- name: Add Rocky vault devel repository for correct kernel-devel package if not on latest OS release
  ansible.builtin.yum_repository:
    name: vault-devel
    description: "Rocky Linux {{ ansible_distribution_version }} - Vault Devel"
    baseurl: "http://dl.rockylinux.org/vault/rocky/{{ ansible_distribution_version }}/devel/x86_64/os/"
    gpgcheck: true
    gpgkey: "///etc/pki/rpm-gpg/RPM-GPG-KEY-rockyofficial"
  when:
    - ansible_distribution == 'Rocky'
    - rocky_vault_test.status == 200
  tags:
    - system
    - system_install
    - install

- name: Check if the Almalinux vault repo exists
  ansible.builtin.uri:
    url: "http://repo.almalinux.org/vault/{{ ansible_distribution_version }}/AppStream/x86_64/os/"
    method: HEAD
  register: alma_vault_test
  failed_when: alma_vault_test.status is undefined or alma_vault_test.status <= 0
  when:
    - ansible_distribution == 'AlmaLinux'
  tags:
    - system
    - system_install
    - install

- name: Add Almalinux vault AppStream repository for correct kernel-devel package if not on latest OS release
  ansible.builtin.yum_repository:
    name: vault-devel
    description: "AlmaLinux {{ ansible_distribution_version }} - Vault AppStream"
    baseurl: "http://repo.almalinux.org/vault/{{ ansible_distribution_version }}/AppStream/x86_64/os/"
    gpgcheck: true
    gpgkey: "///etc/pki/rpm-gpg/RPM-GPG-KEY-AlmaLinux-{{ ansible_distribution_version }}"
  when:
    - ansible_distribution == 'AlmaLinux'
    - alma_vault_test.status == 200
  tags:
    - system
    - system_install
    - install

- name: Add Beegfs YUM Repository
  ansible.builtin.yum_repository:
    name: beegfs
    description: "BeeGFS {{ system_beegfs_version }}"
    baseurl: "{{ system_repo_url | default(system_upstream_repo_url) }}"
    gpgcheck: true
    gpgkey: "{{ system_repo_gpg_keys }}"
  when:
    - (ansible_distribution == 'RedHat') or (ansible_distribution == 'Rocky')
      or (ansible_distribution == 'AlmaLinux')
  tags:
    - system
    - system_install
    - install

- name: Add Beegfs APT signing key
  ansible.builtin.get_url:
    url: "{{ system_repo_gpg_keys }}"
    dest: /etc/apt/trusted.gpg.d/beegfs.asc
    mode: "0644"
    owner: root
    group: root
  when:
    - ansible_distribution == 'Ubuntu'
  tags:
    - system
    - system_install
    - install

- name: Add Beegfs APT Repository
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/etc/apt/trusted.gpg.d/beegfs.asc]  \
          {{ system_repo_url | default(system_upstream_repo_url) }}"
    filename: beegfs
  when:
    - ansible_distribution == 'Ubuntu'
  tags:
    - system
    - system_install
    - install

- name: Install System packages "{{ system_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ system_packages }}"
  register: _package_inst
  retries: 3
  until: _package_inst is success
  tags:
    - system
    - system_install
    - install
